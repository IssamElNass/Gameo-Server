// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String       @id @default(uuid())
  createdAt       DateTime     @default(now())
  username        String       @unique @db.VarChar(40)
  password        String       @db.VarChar()
  email           String       @unique @db.VarChar(155)
  bio             String?
  profile_picture String       @default("https://wallpaperaccess.com/full/4595683.jpg") @db.VarChar()
  role            String       @default("FREE") @db.VarChar(20)
  verified        Boolean      @default(false)
  collection      Collection[]
}

model Token {
  token      String   @id @unique @db.VarChar()
  expires_at DateTime
  userId     String   @unique
}

model Collection {
  id       Int     @id @default(autoincrement())
  status   Status  @relation(fields: [statusId], references: [id])
  game     Game    @relation(fields: [gameId], references: [id])
  statusId Int
  gameId   Int
  User     User?   @relation(fields: [userId], references: [id])
  userId   String?
}

model Status {
  id          Int          @id @default(autoincrement())
  name        String       @unique @db.VarChar(50)
  description String?      @db.VarChar(150)
  Collection  Collection[]
}

model Game {
  id          Int               @id @default(autoincrement())
  name        String            @db.VarChar()
  slug        String            @unique @db.VarChar()
  description String?           @db.VarChar()
  igdb_id     Int?              @unique
  gamecover   String            @db.VarChar()
  website     String?           @db.VarChar()
  patchNotes  String?           @db.VarChar()
  screenshots GameScreenshot[]
  collection  Collection[]
  videos      GameVideo[]
  platforms   GamePlatform[]
  genres      Genre[]
  companies   InvolvedCompany[]
}

model GameScreenshot {
  id      Int     @id @default(autoincrement())
  caption String? @unique @db.VarChar(50)
  url     String  @db.VarChar()
  game    Game    @relation(fields: [gameId], references: [id])
  gameId  Int
}

model GameVideo {
  id      Int     @id @default(autoincrement())
  caption String? @db.VarChar()
  url     String  @db.VarChar()
  game    Game    @relation(fields: [gameId], references: [id])
  gameId  Int
}

model GamePlatform {
  id             Int       @id @default(autoincrement())
  platform       Platform  @relation(fields: [platformId], references: [id])
  release_date   DateTime? @db.Date()
  release_string String    @db.VarChar()
  game           Game      @relation(fields: [gameId], references: [id])
  gameId         Int
  platformId     Int
}

model Platform {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar()
  slug         String         @unique @db.VarChar()
  igdb_id      Int?
  gamePlatform GamePlatform[]
}

model Company {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar()
  description     String            @db.VarChar()
  slug            String            @unique @db.VarChar()
  igdb_id         Int?
  InvolvedCompany InvolvedCompany[]
}

model InvolvedCompany {
  id        Int       @id @default(autoincrement())
  developer Boolean
  publisher Boolean
  igdb_id   Int?
  Game      Game?     @relation(fields: [gameId], references: [id])
  gameId    Int?
  Company   Company[]
}

model Genre {
  id      Int    @id @default(autoincrement())
  name    String @db.VarChar()
  slug    String @unique @db.VarChar()
  igdb_id Int?
  Game    Game[]
}
