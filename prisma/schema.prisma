generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @id @default(uuid())
  created_at      DateTime        @default(now())
  username        String          @unique @db.VarChar(40)
  password        String          @db.VarChar()
  email           String          @unique @db.VarChar(155)
  bio             String?
  profile_picture String          @default("https://wallpaperaccess.com/full/4595683.jpg") @db.VarChar()
  role            String          @default("FREE") @db.VarChar(20)
  verified        Boolean         @default(false)
  log             Log[]
  ReviewLike      ReviewLike[]
  ReviewDisLike   ReviewDisLike[]
}

model Token {
  token      String   @id @unique @db.VarChar()
  expires_at DateTime
  userId     String   @unique
}

model Log {
  id       Int     @id @default(autoincrement())
  status   Status  @relation(fields: [statusId], references: [id])
  game     Game    @relation(fields: [gameId], references: [id])
  statusId Int
  gameId   Int
  user     User?   @relation(fields: [userId], references: [id])
  userId   String?
}

model Status {
  id          Int     @id @default(autoincrement())
  name        String  @unique @db.VarChar(50)
  description String? @db.VarChar(150)
  log         Log[]
}

model Game {
  id            Int               @id @default(autoincrement())
  name          String            @db.VarChar()
  slug          String            @db.VarChar()
  description   String?           @db.VarChar()
  igdb_id       Int?
  gamecover     String            @db.VarChar()
  patchNotes    String?           @db.VarChar()
  screenshots   GameScreenshot[]
  log           Log[]
  videos        GameVideo[]
  platforms     Platform[]
  genres        Genre[]
  companies     InvolvedCompany[]
  releases      Release[]
  game_websites GameWebsite[]
  reviews       Review[]
}

model GameScreenshot {
  id      Int     @id @default(autoincrement())
  caption String? @unique @db.VarChar(50)
  url     String  @db.VarChar()
  game    Game    @relation(fields: [gameId], references: [id])
  gameId  Int
}

model GameVideo {
  id      Int     @id @default(autoincrement())
  caption String? @db.VarChar()
  url     String  @db.VarChar()
  game    Game    @relation(fields: [gameId], references: [id])
  gameId  Int
}

model GameWebsite {
  id      Int    @id @default(autoincrement())
  type    String @db.VarChar()
  url     String @db.VarChar()
  igdb_id Int?
  game    Game   @relation(fields: [gameId], references: [id])
  gameId  Int
}

model Review {
  id            Int             @id @default(autoincrement())
  score         Float           @db.DoublePrecision()
  type          String          @db.VarChar()
  url           String          @db.VarChar()
  created_at    DateTime        @default(now())
  game          Game            @relation(fields: [gameId], references: [id])
  gameId        Int
  likes         Int
  dislikes      Int
  ReviewLike    ReviewLike[]
  ReviewDisLike ReviewDisLike[]
}

model ReviewLike {
  id       Int     @id @default(autoincrement())
  review   Review? @relation(fields: [reviewId], references: [id])
  user     User    @relation(fields: [userId], references: [id])
  userId   String
  reviewId Int
}

model ReviewDisLike {
  id       Int     @id @default(autoincrement())
  review   Review? @relation(fields: [reviewId], references: [id])
  user     User    @relation(fields: [userId], references: [id])
  userId   String
  reviewId Int
}

model Release {
  id            Int      @id @default(autoincrement())
  platform      Platform @relation(fields: [platformId], references: [igdb_id])
  release_date  String?  @db.VarChar()
  release_human String   @db.VarChar()
  region        String   @db.VarChar()
  game          Game     @relation(fields: [gameId], references: [id])
  gameId        Int
  platformId    Int
}

model Platform {
  id       Int       @id @default(autoincrement())
  name     String    @db.VarChar()
  slug     String    @unique @db.VarChar()
  igdb_id  Int?      @unique
  games    Game[]
  releases Release[]
}

model Company {
  id                 Int               @id @default(autoincrement())
  name               String            @db.VarChar()
  description        String            @db.VarChar()
  slug               String            @unique @db.VarChar()
  igdb_id            Int?              @unique
  involved_companies InvolvedCompany[]
}

model InvolvedCompany {
  id        Int      @id @default(autoincrement())
  developer Boolean
  publisher Boolean
  igdb_id   Int?
  game      Game?    @relation(fields: [gameId], references: [id])
  gameId    Int?
  company   Company? @relation(fields: [companyId], references: [igdb_id])
  companyId Int?
}

model Genre {
  id      Int    @id @default(autoincrement())
  name    String @db.VarChar()
  slug    String @unique @db.VarChar()
  igdb_id Int?
  games   Game[]
}
